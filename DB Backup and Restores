------Backup and Restore

use master;

CREATE DATABASE WalmartDB;

Use [WalmartDB]

create table Customers (
	CustomerID int Primary key identity(101, 1),
	FirstName Varchar(20),
	LastName varchar(20),
	Age int,
	Gender char(1),
	Country Varchar(20)
	)
Go


--Creating a table Instructors with KWT schema without constrainst
Create schema kwt

create table kwt.Products (
	ProductID int Primary key identity(1001, 1),
	ProductName Varchar(20),
	Price Bigint
	)
Go

---1. Full Backup - every week
backup database WalmartDB 
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_Full_06June2024.bak' 
	
	
--with differential to perform a differntial backup but full backup is always needed first.

----2. Differential backup - every day
backup database WalmartDB 
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_Diff_06June2024.bak' with differential

--insert some data in the tables or add more tables and take a second differential 
create table kwt.Sales (
	SalesID int Primary key identity(1001, 1),
	ProductName Varchar(20),
	Price Bigint,
	PurchasedDate date ,
	VendorAddress varchar(25)
	)
Go

backup database WalmartDB 
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_Diff2_06June2024.bak' with differential

----3. Transaction log backup
backup log WalmartDB
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_log_06June2024.trn' 
    ---Assume a transaction log backup after every 1 hour and draw the diagram to expalin

	--Take the second and third transaction logs
backup log WalmartDB
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_log2_06June2024.trn'

backup log WalmartDB
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_log3_06June2024.trn'

---4. Tail log backup: taken only when the data is damaged or inaccessible
backup log WalmartDB 
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_log_06June2024.trn' with no_truncate  --no_truncate is not recommended, we use with norecovery, continue_after_error

backup log WalmartDB 
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_log_06June2024.trn' with norecovery, continue_after_error

----5. Copy only backup
backup database WalmartDB
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_Full_Copy_06June2024.bak' 
with copy_only

--6. File Backup
backup database WalmartDB file = 'File1_Name'
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_File1_name.FIL' 

backup database WalmartDB file = 'File1_Name'
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_File1_name.FIL' 

--7. Filegroup backup
backup database WalmartDB filegroup = 'Filegroup_Name'
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_Fg_name.FLG'

--7.1. Partial backup
backup database WalmartDB READ_WRITE_FILEGROUPS
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_Partial.bak'

--8. Split backup -backs up into smaller chunks into different disks. Restoration is done one by one in a sequential order.
backup database WalmartDB To
Disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_Full1.bak',
Disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_Full2.bak',
Disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_Full3.bak'

--9. Mirror backup: Gives another copy of the backup
backup database WalmartDB 
To disk = 'B:\MSSQL\PRODBACKUP\WalmartDB_Full_06June2024.bak'
MIRROR TO DISK = 'B:\MSSQL\TESTBACKUP\WalmartDB_Full_Mirror_06June2024.bak'


--10. Stripe Backup
BACKUP DATABASE [AdventureWorks2019] TO  
DISK = N'C:\Program Files\Microsoft SQL Server\MSSQL10.TURBACONDUCKEN\MSSQL\Backup\AdWks1.bak',  
DISK = N'C:\Program Files\Microsoft SQL Server\MSSQL10.TURBACONDUCKEN\MSSQL\Backup\AdWks4.bak',  
DISK = N'C:\Program Files\Microsoft SQL Server\MSSQL10.TURBACONDUCKEN\MSSQL\Backup\AdWks2.bak',  
DISK = N'C:\Program Files\Microsoft SQL Server\MSSQL10.TURBACONDUCKEN\MSSQL\Backup\AdWks3.bak' 
WITH NOFORMAT, 
NOINIT,  
NAME = N'AdventureWorks2019-Full Database Backup', 
SKIP, NOREWIND, NOUNLOAD,  STATS = 10
GO

--10. Compression option in backup
/*Compress the backup files (database backups), saving disk space but more importantly saving time.
You can either configure all backups for an instance to be compressed (it is disable by default),
or you can issue the WITH COMPRESSION command for a specific database.
From SQL server 2008 upwards*/

backup database WalmartDB
To disk = 'B:\MSSQL\PRODBACKUP\BackupnRestoreDB.bak' 
with compression


----RESTORING DATABASES
--To restore a database, we start with the last full back up, the latest differential backups and all the transaction log backs after the latest differential backs

--Restoring full backup in DEV with no recovery
restore database WalmartDB from DISK = 'B:\MSSQL\PRODBACKUP\WalmartDB_Full_06June2024.bak' with norecovery,
--we have to relocate the files
move 'WalmartDB' to 'B:\MSSQL\DEVBACKUP\WalmartDB_data.mdf', --relocating data files from PROD to DEV
move 'WalmartDB_log' to 'L:\MSSQL\DEVBACKUP\WalmartDB_log.ldf' --relocating log files from PROD to DEV

--Restoring Differential backup with no recovery
restore database WalmartDB from DISK = 'B:\MSSQL\PRODBACKUP\WalmartDB_Diff2_06June2024.bak' with norecovery

--Restoring log backup with recovery
restore log WalmartDB from DISK = 'L:\MSSQL\PRODBACKUP\WalmartDB_log_06June2024.trn' with norecovery

restore log WalmartDB from DISK = 'L:\MSSQL\PRODBACKUP\WalmartDB_log2_06June2024.trn' with norecovery

restore log WalmartDB from DISK = 'L:\MSSQL\PRODBACKUP\WalmartDB_log3_06June2024.trn' with norecovery

---Assuming we made a mistake and restored the log with no recovery, we shall correct it as:
restore database WalmartDB with recovery;  --executing this will bring the database online.


--HOW TO RESTORE A BACKUP FILE THAT HAS MULTIPLE BACKUPS
--We can use RESTORE HEADERONLY to see the backs and the positions in the backup file
		
restore database WalmartDB from DISK = 'B:\MSSQL\PRODBACKUP\WalmartDB_Full_06June2024.bak' with norecovery, file=1
restore database WalmartDB from DISK = 'B:\MSSQL\PRODBACKUP\WalmartDB_Diff_06June2024.bak' with file=2

--How to restore a stripe backup
RESTORE DATABASE [AdventureWorks2019] FROM  
DISK = N'C:\Program Files\Microsoft SQL Server\MSSQL10.TURBACONDUCKEN\MSSQL\Backup\AdWks1.bak',  
DISK = N'C:\Program Files\Microsoft SQL Server\MSSQL10.TURBACONDUCKEN\MSSQL\Backup\AdWks4.bak',  
DISK = N'C:\Program Files\Microsoft SQL Server\MSSQL10.TURBACONDUCKEN\MSSQL\Backup\AdWks2.bak',  
DISK = N'C:\Program Files\Microsoft SQL Server\MSSQL10.TURBACONDUCKEN\MSSQL\Backup\AdWks3.bak' 
WITH  FILE = 1,  NOUNLOAD,  STATS = 10
GO


--RESTORE HEADERONLY = returns a result set conataining all the back header information for all backup sets on a particular back up device in SQL server
restore HEADERONLY from DISK = 'B:\MSSQL\PRODBACKUP\WalmartDB_LOG_06June2024.trn' 


--------BACKUP TYPES, LOCATIONS AND TIME
SELECT database_name AS DBName
    ,physical_device_name AS BackupLocation
    ,CASE WHEN [TYPE]='D' THEN 'FULL'  
    WHEN [TYPE]='I' THEN 'DIFFERENTIAL' 
    WHEN [TYPE]='L' THEN 'LOG'
    WHEN [TYPE]='F' THEN 'FILE / FILEGROUP'
    WHEN [TYPE]='G'  THEN 'DIFFERENTIAL FILE'
    WHEN [TYPE]='P' THEN 'PARTIAL'
    WHEN [TYPE]='Q' THEN 'DIFFERENTIAL PARTIAL'
  END AS BackupType
    ,backup_finish_date AS BackupFinishDate
FROM msdb.dbo.backupset JOIN msdb.dbo.backupmediafamily
ON(backupset.media_set_id=backupmediafamily.media_set_id)
ORDER BY backup_finish_date DESC


---Backing up all dtabases in an instance (Full Backup)
DECLARE @bk_path VARCHAR(256);
DECLARE @db_name VARCHAR(50);
DECLARE @bk_file_date VARCHAR(20);
DECLARE @bk_file_name VARCHAR(256);
DECLARE @i INT = 1;
 
/* Specify database backup directory. Change this as needed. */
SET @bk_path = 'B:\MSSQL\PRODBACKUP\';

 
/* Backup file format DBname_YYYYMMDD_HHMMSS.BAK. Change this as needed. */
SELECT @bk_file_date = FORMAT(GETDATE(), 'yyyyMMdd_hhmmss');
 
DECLARE @db_names TABLE (
   id INT IDENTITY(1,1) PRIMARY KEY, 
   db_name VARCHAR(50) NOT NULL );
 
INSERT INTO @db_names
   SELECT name 
   FROM master.sys.databases 
   WHERE name NOT IN ('master','model','msdb','tempdb')  /* Databases which needs to be excluded */
      AND state = 0 /* Include only the database which are online */
      AND is_in_standby = 0; /* database is not read only for log shipping */
 
WHILE EXISTS (SELECT 1 from @db_names WHERE Id = @i)
BEGIN
    
   SELECT @db_name = db_name from @db_names WHERE Id = @i;
   PRINT 'Backup Started: ' + @db_name
    
   SET @bk_file_name = @bk_path + @db_name + '_' + @bk_file_date + '.BAK';
 
   BACKUP DATABASE @db_name TO DISK = @bk_file_name WITH STATS;
 
   SET @i = @i + 1;
    
END
GO


--Script 2
------Backup and Restore


---Checking recovery model in all databases

SELECT name AS [Database Name],
recovery_model_desc AS [Recovery Model] FROM sys.databases
GO



--Point in time restore after a disaster

--simulate a disaster and restor the database back to a point in time recovery
--Create a database and in this database create a table ans insert two records into the table
--Next take a full backup of the database

use master;

Create database Demo

use Demo;

Create table student (ID int identity(1,1), LName varchar(10), FName varchar(10))

Insert into Student values('John', 'Fon')
Insert into Student values('Peter', 'Tam')
Go 

select * from Student

--Take a full backup of the Database
BACKUP DATABASE Demo
TO DISK = 'B:\MSSQL\PRODBACKUP\Demo_Full_20240606.bak'
GO

--Insert two more records into the table and take a Diff backup
Insert into Student values('Felix', 'F')
Insert into Student values('James', 'Thomas')

select * from Student

--You can take a differential backup using Gui and script it

--Insert two more records into the table and take the 1st T-log backup
Insert into Student values('Jessica', 'Bi')
Insert into Student values('Hanna', 'Tom')

select * from Student

--Transaction log backup(Has only the 2 records above)
BACKUP LOG [Demo] TO  DISK = N'B:\MSSQL\PRODBACKUP\Demo_Tlog1_20240606.trn' WITH NOFORMAT

--Insert two more records into the table and take the 2nd T-log BACKUP of Demo 

Insert into Student values('Jess', 'Carl')
Insert into Student values('Honorine', 'Tri')

select * from Student

--T-log2
BACKUP LOG [Demo] TO  DISK = N'B:\MSSQL\PRODBACKUP\Demo_Tlog2_20240606.trn' WITH NOFORMAT
GO

--Insert two more records to the table and this time take no backup
Insert into Student values('Pamela', 'First')
Insert into Student values('Joan', 'Second')

select * from student

--This implies that there is a backup for all the records inserted into the table except for the last two records



--Simulate a disaster by taking the database offline and delete one of the data files in the data drive for the demo database
use [master];
GO
USE [master]
GO
ALTER DATABASE [Demo] SET  OFFLINE
GO
	--Go and delete one of the data file

--Try to bring the database online and it will enter into recovery pending mode(Unable to fine some of the files)
--Alter database demo set online

--Take a tail log backup
BACKUP LOG [Demo] TO  DISK = N'B:\MSSQL\PRODBACKUP\Demo_Tail_20240606.trn' With continue_After_error
--With Norecovery
GO

---Restore the most recent full backup with norecovery
USE [master]
RESTORE DATABASE [Demo] FROM  DISK = N'B:\MSSQL\PRODBACKUP\Demo_Full_20240606.bak' WITH  FILE = 1,  NORECOVERY

---Restore the Differential backup with norecovery

---Restore the transaction log backups in the sequence in which they were taken with no recovery

---Restore the Tail-log backup with recovery


















